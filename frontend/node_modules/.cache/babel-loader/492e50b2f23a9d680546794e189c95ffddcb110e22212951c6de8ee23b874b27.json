{"ast":null,"code":"import axios from 'axios';\n\n// Determine the backend URL based on how the frontend is accessed\nconst getBackendURL = () => {\n  if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {\n    return 'http://localhost:8080';\n  } else {\n    // Use the same IP as the frontend but port 8080\n    return `http://${window.location.hostname}:8080`;\n  }\n};\nconst API_BASE_URL = getBackendURL();\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor to include auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  login: (username, password) => api.post('/users/login', {\n    username,\n    password\n  }),\n  register: (username, password) => api.post('/users', {\n    username,\n    password\n  })\n};\n\n// Items API\nexport const itemsAPI = {\n  getAll: () => api.get('/items'),\n  create: (name, status = 'active') => api.post('/items', {\n    name,\n    status\n  })\n};\n\n// Cart API\nexport const cartAPI = {\n  addItem: item_id => api.post('/carts', {\n    item_id\n  }),\n  getUserCart: () => api.get('/carts/user'),\n  getAll: () => api.get('/carts')\n};\n\n// Orders API\nexport const ordersAPI = {\n  create: () => api.post('/orders'),\n  getUserOrders: () => api.get('/orders/user'),\n  getAll: () => api.get('/orders')\n};\nexport default api;","map":{"version":3,"names":["axios","getBackendURL","window","location","hostname","API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","authAPI","login","username","password","post","register","itemsAPI","getAll","get","name","status","cartAPI","addItem","item_id","getUserCart","ordersAPI","getUserOrders"],"sources":["C:/Users/Deepanshu Maliyaan/Desktop/Assessment - FullStack(ABCDE)/frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Determine the backend URL based on how the frontend is accessed\r\nconst getBackendURL = () => {\r\n  if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {\r\n    return 'http://localhost:8080';\r\n  } else {\r\n    // Use the same IP as the frontend but port 8080\r\n    return `http://${window.location.hostname}:8080`;\r\n  }\r\n};\r\n\r\nconst API_BASE_URL = getBackendURL();\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add request interceptor to include auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n  login: (username, password) => \r\n    api.post('/users/login', { username, password }),\r\n  \r\n  register: (username, password) => \r\n    api.post('/users', { username, password }),\r\n};\r\n\r\n// Items API\r\nexport const itemsAPI = {\r\n  getAll: () => api.get('/items'),\r\n  create: (name, status = 'active') => \r\n    api.post('/items', { name, status }),\r\n};\r\n\r\n// Cart API\r\nexport const cartAPI = {\r\n  addItem: (item_id) => api.post('/carts', { item_id }),\r\n  getUserCart: () => api.get('/carts/user'),\r\n  getAll: () => api.get('/carts'),\r\n};\r\n\r\n// Orders API\r\nexport const ordersAPI = {\r\n  create: () => api.post('/orders'),\r\n  getUserOrders: () => api.get('/orders/user'),\r\n  getAll: () => api.get('/orders'),\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC1B,IAAIC,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,WAAW,IAAIF,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,WAAW,EAAE;IACxF,OAAO,uBAAuB;EAChC,CAAC,MAAM;IACL;IACA,OAAO,UAAUF,MAAM,CAACC,QAAQ,CAACC,QAAQ,OAAO;EAClD;AACF,CAAC;AAED,MAAMC,YAAY,GAAGJ,aAAa,CAAC,CAAC;;AAEpC;AACA,MAAMK,GAAG,GAAGN,KAAK,CAACO,MAAM,CAAC;EACvBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMG,OAAO,GAAG;EACrBC,KAAK,EAAEA,CAACC,QAAQ,EAAEC,QAAQ,KACxBlB,GAAG,CAACmB,IAAI,CAAC,cAAc,EAAE;IAAEF,QAAQ;IAAEC;EAAS,CAAC,CAAC;EAElDE,QAAQ,EAAEA,CAACH,QAAQ,EAAEC,QAAQ,KAC3BlB,GAAG,CAACmB,IAAI,CAAC,QAAQ,EAAE;IAAEF,QAAQ;IAAEC;EAAS,CAAC;AAC7C,CAAC;;AAED;AACA,OAAO,MAAMG,QAAQ,GAAG;EACtBC,MAAM,EAAEA,CAAA,KAAMtB,GAAG,CAACuB,GAAG,CAAC,QAAQ,CAAC;EAC/BtB,MAAM,EAAEA,CAACuB,IAAI,EAAEC,MAAM,GAAG,QAAQ,KAC9BzB,GAAG,CAACmB,IAAI,CAAC,QAAQ,EAAE;IAAEK,IAAI;IAAEC;EAAO,CAAC;AACvC,CAAC;;AAED;AACA,OAAO,MAAMC,OAAO,GAAG;EACrBC,OAAO,EAAGC,OAAO,IAAK5B,GAAG,CAACmB,IAAI,CAAC,QAAQ,EAAE;IAAES;EAAQ,CAAC,CAAC;EACrDC,WAAW,EAAEA,CAAA,KAAM7B,GAAG,CAACuB,GAAG,CAAC,aAAa,CAAC;EACzCD,MAAM,EAAEA,CAAA,KAAMtB,GAAG,CAACuB,GAAG,CAAC,QAAQ;AAChC,CAAC;;AAED;AACA,OAAO,MAAMO,SAAS,GAAG;EACvB7B,MAAM,EAAEA,CAAA,KAAMD,GAAG,CAACmB,IAAI,CAAC,SAAS,CAAC;EACjCY,aAAa,EAAEA,CAAA,KAAM/B,GAAG,CAACuB,GAAG,CAAC,cAAc,CAAC;EAC5CD,MAAM,EAAEA,CAAA,KAAMtB,GAAG,CAACuB,GAAG,CAAC,SAAS;AACjC,CAAC;AAED,eAAevB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}